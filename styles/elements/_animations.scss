// animation runner
.animation {
  animation-duration: 1s;
  animation-fill-mode: both;
}

.infinite {
  animation-iteration-count: infinite;
}
// Keyframes Animations
@keyframes shake {
  from, to {
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

@keyframes bounce {

  from, 20%, 53%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0, 0, 0);
  }

  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }

  90% {
    transform: translate3d(0, -4px, 0);
  }
}

@keyframes success {
  0% {
    transform: translateY(-6px);
    opacity: 1
  }
  50% {
    transform: translateY(6px);
    opacity: .8
  }
  100% {
    transform: translateY(-6px);
    opacity: 1
  }
}

@keyframes rubber {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, .95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes zoom {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}


@keyframes calling {
  from {
    box-shadow: 0 0 0 0 rgba(46, 204, 113, 0.3);
  }

  50% {
    box-shadow: 0 0 0 15px rgba(0, 0, 0, 0.3);
  }


  to {
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3);
  }
}

// Animation Names
.shake {
  animation-name: shake;
}

.success {
  animation-name: success;
}

.bounce {
  animation-name: bounce;
}

.rubber {
  animation-name: rubber;
}

.zoom {
  animation-name: zoom;
}

.calling {
  animation-name: calling;
}